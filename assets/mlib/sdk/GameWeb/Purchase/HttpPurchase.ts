// <auto-generated> This code was generated automatically. Do not modify. </auto-generated>

import { HttpRequest } from "../../../module/network/HttpRequest";
import { GameWebTool } from "../GameWebTool";

/** 内购接口 */
export class HttpPurchase {

    private static get Url() { return `${mGameSetting.serverUrl}/purchase/${mGameSetting.gameCode}/`; }

    /** 查询订单是否存在 */
    public static async queryOrder(uid: string, orderId: string) {
        let url = this.Url + `queryorder?uid=${uid}&orderId=${orderId}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 查询未完成的订单 */
    public static async queryUnusedOrder(uid: string) {
        let url = this.Url + `queryunusedorder?uid=${uid}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpPurchaseModel.RspUnusedOrder[]>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 查询已完成的订单 */
    public static async queryUsedOrder(uid: string) {
        let url = this.Url + `queryusedorder?uid=${uid}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<string[]>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 完成订单 */
    public static async finishOrder(uid: string, orderId: string) {
        let url = this.Url + `finishorder?uid=${uid}&orderId=${orderId}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

}