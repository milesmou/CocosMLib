// <auto-generated> This code was generated automatically. Do not modify. </auto-generated>

import { HttpRequest } from "../../../module/network/HttpRequest";
import { GameWebTool } from "../GameWebTool";

/** 邮件接口 */
export class HttpEmail {

    private static get Url() { return `${mGameSetting.serverUrl}/email/${mGameSetting.gameCode}/`; }

    /** 发送邮件 */
    public static async sendEmail(email: HttpEmailModel.Email) {
        let url = this.Url + `send_email`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: email, header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 删除邮件 */
    public static async delEmail(emailId: string) {
        let url = this.Url + `del_email?emailId=${emailId}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 更新邮件 */
    public static async modifyEmail(email: HttpEmailModel.Email) {
        let url = this.Url + `modify_email`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: email, header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取我的所有邮件 */
    public static async getEmails(uid: string) {
        let url = this.Url + `get_emails?uid=${uid}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpEmailModel.Email[]>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取后台的所有邮件 */
    public static async getEmailsSys() {
        let url = this.Url + `get_emails_sys`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpEmailModel.Email[]>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

}