// <auto-generated> This code was generated automatically. Do not modify. </auto-generated>

import { HttpRequest } from "../../../module/network/HttpRequest";
import { GameWebTool } from "../GameWebTool";

/** 公会接口 */
export class HttpGuild {

    private static get Url() { return `${mGameSetting.serverUrl}/guild/${mGameSetting.gameCode}/`; }

    /** 创建公会 */
    public static async createGuild(reqData: HttpGuildModel.ReqCreateGuild) {
        let url = this.Url + `create_guild`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.Guild>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 解散公会 (只有会长可以解散) */
    public static async disbandGuild(uid: string) {
        let url = this.Url + `disband_guild?uid=${uid}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 转让公会 (只有会长可以转让) */
    public static async transferGuild(reqData: HttpGuildModel.ReqTransferGuild) {
        let url = this.Url + `transfer_guild`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 更新公会信息 */
    public static async updateGuild(reqData: HttpGuildModel.ReqUpdateGuild) {
        let url = this.Url + `update_guild`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.Guild>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 更新公会积分 */
    public static updateGuildScore(reqData: HttpGuildModel.ReqUpdateGuildScore) {
        let url = this.Url + `update_guildscore`;
        HttpRequest.request(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader });
    }

    /** 获取公会详细信息 */
    public static async getGuild(guildId: number) {
        let url = this.Url + `get_guild?guildId=${guildId}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.Guild>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取我的公会详细信息 */
    public static async getMyGuild(uid: string) {
        let url = this.Url + `get_my_guild?uid=${uid}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.RspMyGuild>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取公会列表 */
    public static async getGuildList(reqData: HttpGuildModel.ReqGuildList) {
        let url = this.Url + `get_guild_list`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.RspGuildList>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 更新公会成员信息 */
    public static async updateGuildMember(reqData: HttpGuildModel.ReqUpdateGuildMember) {
        let url = this.Url + `update_guildmember`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 获取公会成员信息 */
    public static async getGuildMember(uid: string) {
        let url = this.Url + `get_guildmember?uid=${uid}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.GuildMember>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取公会成员列表 */
    public static async getGuildMemberList(reqData: HttpGuildModel.ReqGuildMemberList) {
        let url = this.Url + `get_guildmember_list`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.RspGuildMemberList>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 申请加入公会 */
    public static async joinGuild(reqData: HttpGuildModel.ReqJoinGuild) {
        let url = this.Url + `join_guild`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.Guild>;
        return result;
    }

    /** 申请退出公会 */
    public static async exitGuild(reqData: HttpGuildModel.ReqExitGuild) {
        let url = this.Url + `exit_guild`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 把成员踢出公会 */
    public static async kickGuild(reqData: HttpGuildModel.ReqKickGuild) {
        let url = this.Url + `kick_guild`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 获取审批信息列表 */
    public static async getGuildApproveList(reqData: HttpGuildModel.ReqGuildApproveList) {
        let url = this.Url + `get_guildapprove_list`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.RspGuildMemberList>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 处理审批信息 */
    public static async guildApprove(reqData: HttpGuildModel.ReqGuildApprove) {
        let url = this.Url + `guildapprove`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        return result;
    }

    /** 发送公会聊天信息 */
    public static async sendGuildChat(reqData: HttpGuildModel.ReqSendGuildChat) {
        let url = this.Url + `send_guildchat`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 更新公会聊天信息 */
    public static async updateGuildChat(reqData: HttpGuildModel.ReqUpdateGuildChat) {
        let url = this.Url + `update_guildchat`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 获取一条公会聊天信息 */
    public static async getGuildChat(id: string) {
        let url = this.Url + `get_guildchat?id=${id}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.GuildChatInfo>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 删除一条公会聊天信息 */
    public static async deleteGuildChat(id: string) {
        let url = this.Url + `delete_guildchat?id=${id}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 获取公会聊天信息列表 */
    public static async getGuildChatList(reqData: HttpGuildModel.ReqGuildChatList) {
        let url = this.Url + `get_guildchat_list`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.GuildChatInfo[]>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取公会聊天信息列表 */
    public static async getGuildChatList2(reqData: HttpGuildModel.ReqGuildChatList2) {
        let url = this.Url + `get_guildchat_list2`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<HttpGuildModel.RspGuildChatList>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

}