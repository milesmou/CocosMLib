// <auto-generated> This code was generated automatically. Do not modify. </auto-generated>

import { HttpRequest } from "../../../module/network/HttpRequest";
import { GameWebTool } from "../GameWebTool";

/** 兑换码接口 */
export class HttpRedeemCode {

    private static get Url() { return `${mGameSetting.serverUrl}/redeemcode/${mGameSetting.gameCode}/`; }

    /** 生成兑换码 */
    public static async genRedeemCode(reqData: HttpRedeemCodeModel.ReqGenRedeemCode) {
        let url = this.Url + `gen_redeemcode`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 删除兑换码 */
    public static async delRedeemCode(code: string) {
        let url = this.Url + `del_redeemcode?code=${code}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 修改兑换码 */
    public static async modifyRedeemCode(reqData: HttpRedeemCodeModel.RedeemCode) {
        let url = this.Url + `modify_redeemcode`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取所有兑换码 */
    public static async getRedeemCodes() {
        let url = this.Url + `get_redeemcodes`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpRedeemCodeModel.RedeemCode[]>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 兑换码兑换奖励 */
    public static async verifyRedeemCode(redeemCode: string) {
        let url = this.Url + `verify_redeemcode?redeemCode=${redeemCode}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        return result;
    }

}