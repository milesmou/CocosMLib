// <auto-generated> This code was generated automatically. Do not modify. </auto-generated>

import { HttpRequest } from "../../../module/network/HttpRequest";
import { GameWebTool } from "../GameWebTool";

/** 公告接口 */
export class HttpNotice {

    private static get Url() { return `${mGameSetting.serverUrl}/notice/${mGameSetting.gameCode}/`; }

    /** 发送公告 */
    public static async send(reqData: HttpNoticeModel.Notice) {
        let url = this.Url + `send`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 删除公告 */
    public static async delete(id: string) {
        let url = this.Url + `delete?id=${id}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 修改公告 */
    public static async modify(reqData: HttpNoticeModel.Notice) {
        let url = this.Url + `modify`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取最新的一条公告 */
    public static async get() {
        let url = this.Url + `get`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpNoticeModel.Notice>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

    /** 获取所有公告 */
    public static async getAllSys() {
        let url = this.Url + `get_all_sys`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse<HttpNoticeModel.Notice[]>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

}