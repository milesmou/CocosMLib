// <auto-generated> This code was generated automatically. Do not modify. </auto-generated>

import { HttpRequest } from "../../../module/network/HttpRequest";
import { GameWebTool } from "../GameWebTool";

/** 抖音小游戏接口 */
export class HttpDouYin {

    private static get Url() { return `${mGameSetting.serverUrl}/douyingame/${mGameSetting.gameCode}/`; }

    /** 文本安全性校验(敏感词检测) */
    public static async msgSecCheck(reqData: HttpDouYinModel.ReqDouYinMsgSecCheck) {
        let url = this.Url + `msg_sec_check`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 图片安全性校验(头像检测) */
    public static async imageSecCheck(reqData: HttpDouYinModel.ReqDouYinImageSecCheck) {
        let url = this.Url + `image_sec_check`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: reqData, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 玩家添加一条场景检查数据 */
    public static async addSceneCheck(data: HttpDouYinModel.DouYinSceneCheckData) {
        let url = this.Url + `add_scene_check`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: data, header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 玩家删除一条场景检查数据 */
    public static async delSceneCheck(openId: string) {
        let url = this.Url + `del_scene_check?openId=${openId}`;
        let result = await HttpRequest.requestObject(url, { method: "POST", header: GameWebTool.gameCodeHeader }) as MResponse;
        if (result?.code == 0) {
            return true;
        } else {
            mLogger.error(result);
            return false;
        }
    }

    /** 核验礼包兑换码 */
    public static async verifyGiftCode(data: HttpDouYinModel.ReqDouYinVerifyGiftCode) {
        let url = this.Url + `verify_giftcode`;
        let result = await HttpRequest.requestObject(url, { method: "POST", data: data, header: GameWebTool.gameCodeHeader }) as MResponse<string>;
        if (result?.code == 0) {
            return result.data;
        } else {
            mLogger.error(result);
            return null;
        }
    }

}