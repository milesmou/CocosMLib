// <auto-generated> This code was generated automatically. Do not modify. </auto-generated>

/** 游戏数据存档管理数据结构 */
declare namespace HttpGameDataModel {

   /** 游戏数据存档 键值方式 */
   export interface GameData {
       /** 主键 */
       id?: string;
       /** 用户id */
       userId: string;
       /** 键 */
       key: string;
       /** 值 */
       value: string;
       /** 上次更新时间(毫秒) */
       updateTime?: number;
   }

   /** 玩家信息 存储一些比较重要的信息(等级 关卡 VIP 公会) */
   export interface PlayerInfo {
       /** 用户id */
       userId: string;
       /** 头像 */
       avatar?: string;
       /** 名字 */
       name?: string;
       /** vip等级 */
       vip?: number;
       /** 玩家等级 */
       level?: number;
       /** 玩家关卡 */
       stage?: string;
       /** 扩展参数 */
       extParam?: string;
       /** 上次活跃时间(毫秒) */
       activeTime?: number;
   }

   /** 请求 获取游戏数据 */
   export interface ReqGameData {
       /** 用户id */
       userId: string;
       /** 键 */
       key: string;
       /** 时间戳(毫秒) 用于判断服务端的数据是否是更新的 若有传值只会在服务端数据更新的时候才会返回值 */
       time?: number;
   }

   /** 请求 获取玩家的存档 */
   export interface ReqGetPlayerGameData {
       /** 用户id */
       userId: string;
       /** 时间戳(毫秒) 用于判断服务端的数据是否是更新的 若有传值只会在服务端数据更新的时候才会返回值 */
       time?: number;
   }

   /** 请求 上传玩家的存档 */
   export interface ReqSavePlayerGameData {
       /** 用户id */
       userId: string;
       /** 存档数据 */
       data: string;
   }

   /** 响应 玩家的存档 */
   export interface RspPlayerGameData {
       /** 存档数据 */
       data: string;
       /** 上次更新时间(毫秒) */
       updateTime: number;
   }

}