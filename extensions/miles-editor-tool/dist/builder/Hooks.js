"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.onAfterMake = exports.onBeforeMake = exports.onError = exports.onAfterBuild = exports.onAfterCompressSettings = exports.onBeforeCompressSettings = exports.onBeforeBuild = void 0;
const Config_1 = require("../tools/Config");
const Utils_1 = require("../tools/Utils");
const BuildLogger_1 = require("./BuildLogger");
const BuildConfig_1 = require("./postbuild/BuildConfig");
const BuildNative_1 = require("./postbuild/BuildNative");
const HotUpdate_1 = require("./postbuild/HotUpdate");
const Minigame_1 = require("./postbuild/Minigame");
const tag = "[Build]";
const onBeforeBuild = async function (options, result) {
    // Todo some thing
};
exports.onBeforeBuild = onBeforeBuild;
const onBeforeCompressSettings = async function (options, result) {
    // Todo some thing
};
exports.onBeforeCompressSettings = onBeforeCompressSettings;
const onAfterCompressSettings = async function (options, result) {
    // Todo some thing
};
exports.onAfterCompressSettings = onAfterCompressSettings;
const onAfterBuild = async function (options, result) {
    BuildLogger_1.BuildLogger.info(tag, "后处理开始");
    BuildConfig_1.BuildConfig.execute(options, result);
    if (Utils_1.Utils.isNative(options.platform)) {
        BuildNative_1.BuildNative.execute(options, result);
        /** 是否启用热更 */
        let hotupdateEnable = Config_1.Config.get("gameSetting.hotupdate", false);
        BuildLogger_1.BuildLogger.info(tag, 'hotupdateEnable', hotupdateEnable);
        if (hotupdateEnable) {
            HotUpdate_1.HotUpdate.modifyJsFile(options, result);
            HotUpdate_1.HotUpdate.replaceManifest(options, result);
        }
    }
    if (Utils_1.Utils.isMinigame(options.platform)) {
        if (!options.md5Cache) {
            BuildLogger_1.BuildLogger.warn(tag, "小游戏建议开启Md5Cache");
        }
        await Minigame_1.Minigame.modifyServer(options, result);
        await Minigame_1.Minigame.uploadToAliOss(options, result);
    }
    BuildLogger_1.BuildLogger.info(tag, "后处理结束");
};
exports.onAfterBuild = onAfterBuild;
const onError = async function (options, result) {
    // Todo some thing
};
exports.onError = onError;
const onBeforeMake = async function (root, options) {
    // Todo some thing
};
exports.onBeforeMake = onBeforeMake;
const onAfterMake = async function (root, options) {
    // Todo some thing
};
exports.onAfterMake = onAfterMake;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG9va3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zb3VyY2UvYnVpbGRlci9Ib29rcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSw0Q0FBeUM7QUFDekMsMENBQXVDO0FBQ3ZDLCtDQUE0QztBQUM1Qyx5REFBc0Q7QUFDdEQseURBQXNEO0FBQ3RELHFEQUFrRDtBQUNsRCxtREFBZ0Q7QUFFaEQsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDO0FBRWYsTUFBTSxhQUFhLEdBQTRCLEtBQUssV0FBVyxPQUF5QixFQUFFLE1BQW9CO0lBQ2pILGtCQUFrQjtBQUN0QixDQUFDLENBQUM7QUFGVyxRQUFBLGFBQWEsaUJBRXhCO0FBRUssTUFBTSx3QkFBd0IsR0FBdUMsS0FBSyxXQUFXLE9BQXlCLEVBQUUsTUFBb0I7SUFDdkksa0JBQWtCO0FBQ3RCLENBQUMsQ0FBQztBQUZXLFFBQUEsd0JBQXdCLDRCQUVuQztBQUVLLE1BQU0sdUJBQXVCLEdBQXNDLEtBQUssV0FBVyxPQUF5QixFQUFFLE1BQW9CO0lBQ3JJLGtCQUFrQjtBQUN0QixDQUFDLENBQUM7QUFGVyxRQUFBLHVCQUF1QiwyQkFFbEM7QUFFSyxNQUFNLFlBQVksR0FBMkIsS0FBSyxXQUFXLE9BQXlCLEVBQUUsTUFBb0I7SUFDL0cseUJBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLHlCQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNyQyxJQUFJLGFBQUssQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xDLHlCQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNyQyxhQUFhO1FBQ2IsSUFBSSxlQUFlLEdBQUcsZUFBTSxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNqRSx5QkFBVyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFDMUQsSUFBSSxlQUFlLEVBQUU7WUFDakIscUJBQVMsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQ3hDLHFCQUFTLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztTQUM5QztLQUNKO0lBQ0QsSUFBSSxhQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtRQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRTtZQUNuQix5QkFBVyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztTQUM1QztRQUNELE1BQU0sbUJBQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzdDLE1BQU0sbUJBQVEsQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0tBQ2xEO0lBQ0QseUJBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ25DLENBQUMsQ0FBQztBQXJCVyxRQUFBLFlBQVksZ0JBcUJ2QjtBQUVLLE1BQU0sT0FBTyxHQUFzQixLQUFLLFdBQVcsT0FBTyxFQUFFLE1BQU07SUFDckUsa0JBQWtCO0FBQ3RCLENBQUMsQ0FBQztBQUZXLFFBQUEsT0FBTyxXQUVsQjtBQUVLLE1BQU0sWUFBWSxHQUEyQixLQUFLLFdBQVcsSUFBSSxFQUFFLE9BQU87SUFDN0Usa0JBQWtCO0FBQ3RCLENBQUMsQ0FBQztBQUZXLFFBQUEsWUFBWSxnQkFFdkI7QUFFSyxNQUFNLFdBQVcsR0FBMEIsS0FBSyxXQUFXLElBQUksRUFBRSxPQUFPO0lBQzNFLGtCQUFrQjtBQUN0QixDQUFDLENBQUM7QUFGVyxRQUFBLFdBQVcsZUFFdEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWlsZEhvb2ssIElCdWlsZFJlc3VsdCwgSUJ1aWxkVGFza09wdGlvbiB9IGZyb20gJy4uLy4uL0Bjb2Nvcy9jcmVhdG9yLXR5cGVzL2VkaXRvci9wYWNrYWdlcy9idWlsZGVyL0B0eXBlcyc7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiLi4vdG9vbHMvQ29uZmlnXCI7XG5pbXBvcnQgeyBVdGlscyB9IGZyb20gJy4uL3Rvb2xzL1V0aWxzJztcbmltcG9ydCB7IEJ1aWxkTG9nZ2VyIH0gZnJvbSAnLi9CdWlsZExvZ2dlcic7XG5pbXBvcnQgeyBCdWlsZENvbmZpZyB9IGZyb20gJy4vcG9zdGJ1aWxkL0J1aWxkQ29uZmlnJztcbmltcG9ydCB7IEJ1aWxkTmF0aXZlIH0gZnJvbSAnLi9wb3N0YnVpbGQvQnVpbGROYXRpdmUnO1xuaW1wb3J0IHsgSG90VXBkYXRlIH0gZnJvbSAnLi9wb3N0YnVpbGQvSG90VXBkYXRlJztcbmltcG9ydCB7IE1pbmlnYW1lIH0gZnJvbSAnLi9wb3N0YnVpbGQvTWluaWdhbWUnO1xuXG5jb25zdCB0YWcgPSBcIltCdWlsZF1cIjtcblxuZXhwb3J0IGNvbnN0IG9uQmVmb3JlQnVpbGQ6IEJ1aWxkSG9vay5vbkJlZm9yZUJ1aWxkID0gYXN5bmMgZnVuY3Rpb24gKG9wdGlvbnM6IElCdWlsZFRhc2tPcHRpb24sIHJlc3VsdDogSUJ1aWxkUmVzdWx0KSB7XG4gICAgLy8gVG9kbyBzb21lIHRoaW5nXG59O1xuXG5leHBvcnQgY29uc3Qgb25CZWZvcmVDb21wcmVzc1NldHRpbmdzOiBCdWlsZEhvb2sub25CZWZvcmVDb21wcmVzc1NldHRpbmdzID0gYXN5bmMgZnVuY3Rpb24gKG9wdGlvbnM6IElCdWlsZFRhc2tPcHRpb24sIHJlc3VsdDogSUJ1aWxkUmVzdWx0KSB7XG4gICAgLy8gVG9kbyBzb21lIHRoaW5nXG59O1xuXG5leHBvcnQgY29uc3Qgb25BZnRlckNvbXByZXNzU2V0dGluZ3M6IEJ1aWxkSG9vay5vbkFmdGVyQ29tcHJlc3NTZXR0aW5ncyA9IGFzeW5jIGZ1bmN0aW9uIChvcHRpb25zOiBJQnVpbGRUYXNrT3B0aW9uLCByZXN1bHQ6IElCdWlsZFJlc3VsdCkge1xuICAgIC8vIFRvZG8gc29tZSB0aGluZ1xufTtcblxuZXhwb3J0IGNvbnN0IG9uQWZ0ZXJCdWlsZDogQnVpbGRIb29rLm9uQWZ0ZXJCdWlsZCA9IGFzeW5jIGZ1bmN0aW9uIChvcHRpb25zOiBJQnVpbGRUYXNrT3B0aW9uLCByZXN1bHQ6IElCdWlsZFJlc3VsdCkge1xuICAgIEJ1aWxkTG9nZ2VyLmluZm8odGFnLCBcIuWQjuWkhOeQhuW8gOWni1wiKTtcbiAgICBCdWlsZENvbmZpZy5leGVjdXRlKG9wdGlvbnMsIHJlc3VsdCk7XG4gICAgaWYgKFV0aWxzLmlzTmF0aXZlKG9wdGlvbnMucGxhdGZvcm0pKSB7XG4gICAgICAgIEJ1aWxkTmF0aXZlLmV4ZWN1dGUob3B0aW9ucywgcmVzdWx0KTtcbiAgICAgICAgLyoqIOaYr+WQpuWQr+eUqOeDreabtCAqL1xuICAgICAgICBsZXQgaG90dXBkYXRlRW5hYmxlID0gQ29uZmlnLmdldChcImdhbWVTZXR0aW5nLmhvdHVwZGF0ZVwiLCBmYWxzZSk7XG4gICAgICAgIEJ1aWxkTG9nZ2VyLmluZm8odGFnLCAnaG90dXBkYXRlRW5hYmxlJywgaG90dXBkYXRlRW5hYmxlKTtcbiAgICAgICAgaWYgKGhvdHVwZGF0ZUVuYWJsZSkge1xuICAgICAgICAgICAgSG90VXBkYXRlLm1vZGlmeUpzRmlsZShvcHRpb25zLCByZXN1bHQpO1xuICAgICAgICAgICAgSG90VXBkYXRlLnJlcGxhY2VNYW5pZmVzdChvcHRpb25zLCByZXN1bHQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChVdGlscy5pc01pbmlnYW1lKG9wdGlvbnMucGxhdGZvcm0pKSB7XG4gICAgICAgIGlmICghb3B0aW9ucy5tZDVDYWNoZSkge1xuICAgICAgICAgICAgQnVpbGRMb2dnZXIud2Fybih0YWcsIFwi5bCP5ri45oiP5bu66K6u5byA5ZCvTWQ1Q2FjaGVcIik7XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgTWluaWdhbWUubW9kaWZ5U2VydmVyKG9wdGlvbnMsIHJlc3VsdCk7XG4gICAgICAgIGF3YWl0IE1pbmlnYW1lLnVwbG9hZFRvQWxpT3NzKG9wdGlvbnMsIHJlc3VsdCk7XG4gICAgfVxuICAgIEJ1aWxkTG9nZ2VyLmluZm8odGFnLCBcIuWQjuWkhOeQhue7k+adn1wiKTtcbn07XG5cbmV4cG9ydCBjb25zdCBvbkVycm9yOiBCdWlsZEhvb2sub25FcnJvciA9IGFzeW5jIGZ1bmN0aW9uIChvcHRpb25zLCByZXN1bHQpIHtcbiAgICAvLyBUb2RvIHNvbWUgdGhpbmdcbn07XG5cbmV4cG9ydCBjb25zdCBvbkJlZm9yZU1ha2U6IEJ1aWxkSG9vay5vbkJlZm9yZU1ha2UgPSBhc3luYyBmdW5jdGlvbiAocm9vdCwgb3B0aW9ucykge1xuICAgIC8vIFRvZG8gc29tZSB0aGluZ1xufTtcblxuZXhwb3J0IGNvbnN0IG9uQWZ0ZXJNYWtlOiBCdWlsZEhvb2sub25BZnRlck1ha2UgPSBhc3luYyBmdW5jdGlvbiAocm9vdCwgb3B0aW9ucykge1xuICAgIC8vIFRvZG8gc29tZSB0aGluZ1xufTtcblxuIl19