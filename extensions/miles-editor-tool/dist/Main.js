"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unload = exports.load = exports.methods = void 0;
const HotUpdate_1 = require("./builder/postbuild/HotUpdate");
const CmdExecute_1 = require("./CmdExecute");
const EventMain_1 = require("./EventMain");
const SceneConnect_1 = require("./scene/SceneConnect");
/**
 * @en Registration method for the main process of Extension
 * @zh 为扩展的主进程的注册方法
 */
exports.methods = {
    /**  */
    saveGameSetting: CmdExecute_1.CmdExecute.saveGameSetting.bind(CmdExecute_1.CmdExecute),
    loadExcel: CmdExecute_1.CmdExecute.loadExcel.bind(CmdExecute_1.CmdExecute),
    genConst: CmdExecute_1.CmdExecute.genConst.bind(CmdExecute_1.CmdExecute),
    closeTexCompress: CmdExecute_1.CmdExecute.closeTexCompress.bind(CmdExecute_1.CmdExecute),
    setTexCompress: CmdExecute_1.CmdExecute.setTexCompress.bind(CmdExecute_1.CmdExecute),
    genHotUpdateRes: HotUpdate_1.HotUpdate.genHotUpdateRes.bind(HotUpdate_1.HotUpdate),
    //场景操作命令 除了在此处还需在SceneMain中注册
    replaceComponent: SceneConnect_1.SceneConnect.send.bind(SceneConnect_1.SceneConnect, "replaceComponent"),
    //测试
    test: CmdExecute_1.CmdExecute.test.bind(CmdExecute_1.CmdExecute),
};
/**
 * @en Hooks triggered after extension loading is complete
 * @zh 扩展加载完成后触发的钩子
 */
function load() {
    EventMain_1.EventMain.registerEvent();
}
exports.load = load;
/**
 * @en Hooks triggered after extension uninstallation is complete
 * @zh 扩展卸载完成后触发的钩子
 */
function unload() {
    EventMain_1.EventMain.unegisterEvent();
}
exports.unload = unload;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NvdXJjZS9NYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUEwRDtBQUMxRCw2Q0FBMEM7QUFDMUMsMkNBQXdDO0FBQ3hDLHVEQUFvRDtBQUlwRDs7O0dBR0c7QUFDVSxRQUFBLE9BQU8sR0FBNEM7SUFDNUQsT0FBTztJQUNQLGVBQWUsRUFBRSx1QkFBVSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsdUJBQVUsQ0FBQztJQUM1RCxTQUFTLEVBQUUsdUJBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLHVCQUFVLENBQUM7SUFDaEQsUUFBUSxFQUFFLHVCQUFVLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyx1QkFBVSxDQUFDO0lBQzlDLGdCQUFnQixFQUFFLHVCQUFVLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLHVCQUFVLENBQUM7SUFDOUQsY0FBYyxFQUFFLHVCQUFVLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyx1QkFBVSxDQUFDO0lBQzFELGVBQWUsRUFBRSxxQkFBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMscUJBQVMsQ0FBQztJQUMxRCw2QkFBNkI7SUFDN0IsZ0JBQWdCLEVBQUUsMkJBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLDJCQUFZLEVBQUUsa0JBQWtCLENBQUM7SUFDMUUsSUFBSTtJQUNKLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsdUJBQVUsQ0FBQztDQUN6QyxDQUFDO0FBRUY7OztHQUdHO0FBQ0gsU0FBZ0IsSUFBSTtJQUNoQixxQkFBUyxDQUFDLGFBQWEsRUFBRSxDQUFDO0FBQzlCLENBQUM7QUFGRCxvQkFFQztBQUVEOzs7R0FHRztBQUNILFNBQWdCLE1BQU07SUFDbEIscUJBQVMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUMvQixDQUFDO0FBRkQsd0JBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIb3RVcGRhdGUgfSBmcm9tIFwiLi9idWlsZGVyL3Bvc3RidWlsZC9Ib3RVcGRhdGVcIjtcbmltcG9ydCB7IENtZEV4ZWN1dGUgfSBmcm9tIFwiLi9DbWRFeGVjdXRlXCI7XG5pbXBvcnQgeyBFdmVudE1haW4gfSBmcm9tIFwiLi9FdmVudE1haW5cIjtcbmltcG9ydCB7IFNjZW5lQ29ubmVjdCB9IGZyb20gXCIuL3NjZW5lL1NjZW5lQ29ubmVjdFwiO1xuXG5cblxuLyoqXG4gKiBAZW4gUmVnaXN0cmF0aW9uIG1ldGhvZCBmb3IgdGhlIG1haW4gcHJvY2VzcyBvZiBFeHRlbnNpb25cbiAqIEB6aCDkuLrmianlsZXnmoTkuLvov5vnqIvnmoTms6jlhozmlrnms5VcbiAqL1xuZXhwb3J0IGNvbnN0IG1ldGhvZHM6IHsgW2tleTogc3RyaW5nXTogKC4uLmFueTogYW55KSA9PiBhbnkgfSA9IHtcbiAgICAvKiogICovXG4gICAgc2F2ZUdhbWVTZXR0aW5nOiBDbWRFeGVjdXRlLnNhdmVHYW1lU2V0dGluZy5iaW5kKENtZEV4ZWN1dGUpLFxuICAgIGxvYWRFeGNlbDogQ21kRXhlY3V0ZS5sb2FkRXhjZWwuYmluZChDbWRFeGVjdXRlKSxcbiAgICBnZW5Db25zdDogQ21kRXhlY3V0ZS5nZW5Db25zdC5iaW5kKENtZEV4ZWN1dGUpLFxuICAgIGNsb3NlVGV4Q29tcHJlc3M6IENtZEV4ZWN1dGUuY2xvc2VUZXhDb21wcmVzcy5iaW5kKENtZEV4ZWN1dGUpLFxuICAgIHNldFRleENvbXByZXNzOiBDbWRFeGVjdXRlLnNldFRleENvbXByZXNzLmJpbmQoQ21kRXhlY3V0ZSksXG4gICAgZ2VuSG90VXBkYXRlUmVzOiBIb3RVcGRhdGUuZ2VuSG90VXBkYXRlUmVzLmJpbmQoSG90VXBkYXRlKSxcbiAgICAvL+WcuuaZr+aTjeS9nOWRveS7pCDpmaTkuoblnKjmraTlpITov5jpnIDlnKhTY2VuZU1haW7kuK3ms6jlhoxcbiAgICByZXBsYWNlQ29tcG9uZW50OiBTY2VuZUNvbm5lY3Quc2VuZC5iaW5kKFNjZW5lQ29ubmVjdCwgXCJyZXBsYWNlQ29tcG9uZW50XCIpLFxuICAgIC8v5rWL6K+VXG4gICAgdGVzdDogQ21kRXhlY3V0ZS50ZXN0LmJpbmQoQ21kRXhlY3V0ZSksXG59O1xuXG4vKipcbiAqIEBlbiBIb29rcyB0cmlnZ2VyZWQgYWZ0ZXIgZXh0ZW5zaW9uIGxvYWRpbmcgaXMgY29tcGxldGVcbiAqIEB6aCDmianlsZXliqDovb3lrozmiJDlkI7op6blj5HnmoTpkqnlrZBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWQoKSB7XG4gICAgRXZlbnRNYWluLnJlZ2lzdGVyRXZlbnQoKTtcbn1cblxuLyoqXG4gKiBAZW4gSG9va3MgdHJpZ2dlcmVkIGFmdGVyIGV4dGVuc2lvbiB1bmluc3RhbGxhdGlvbiBpcyBjb21wbGV0ZVxuICogQHpoIOaJqeWxleWNuOi9veWujOaIkOWQjuinpuWPkeeahOmSqeWtkFxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5sb2FkKCkge1xuICAgIEV2ZW50TWFpbi51bmVnaXN0ZXJFdmVudCgpO1xufVxuXG4iXX0=